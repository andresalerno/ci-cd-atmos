name: CI Pipeline (Lint, Test, Build)

on:
  # Gatilho para o CI rodar quando houver push ou pull request para a branch main
  push:
    branches:
      - main  # Executa quando há push para a branch principal (main)
  pull_request:
    branches:
      - main  # Executa quando há pull request para a branch principal (main)
  # Permite disparar manualmente pelo UI do GitHub
  workflow_dispatch:

jobs:
  # Job de Linting para o Backend
  backend-lint:
    runs-on: ubuntu-latest  # Usa a última versão do Ubuntu disponível para execução
    defaults:
      run:
        working-directory: backend  # Define o diretório de trabalho como 'backend'

    steps:
      # Passo 1: Checkout do código
      - uses: actions/checkout@v4
        name: Checkout code

      # Passo 2: Configuração do Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: 18  # Define a versão do Node.js
          cache: 'npm'  # Ativa cache para dependências npm
          cache-dependency-path: backend/package.json  # Usa arquivo existente para chave do cache

      # Passo 3: Instalar dependências
      - name: Install
        run: |
          npm ci || npm i  # Tenta rodar 'npm ci' para instalações limpas, senão roda 'npm install'

      # Passo 4: Rodar Lint (verificação de qualidade de código)
      - name: Lint
        run: npm run lint

  # Job de Testes para o Backend
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend  # Define o diretório de trabalho como 'backend'

    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package.json

      - name: Install
        run: |
          npm ci || npm i

      # Passo 2: Rodar os testes
      - name: Test
        run: npm test

  # Job de Build para o Backend
  backend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend  # Define o diretório de trabalho como 'backend'

    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: backend/package.json

      - name: Install
        run: |
          npm ci || npm i

      # Passo 3: Build (Noop aqui, pode ser ajustado para um verdadeiro build)
      - name: Build (noop for backend)
        run: echo "no build step"  # No-op: sem build real para o backend, mas pode ser ajustado se necessário

  # Job de Linting para o Frontend
  frontend-lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend  # Define o diretório de trabalho como 'frontend'

    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install
        run: |
          npm ci || npm i

      # Passo 4: Rodar Lint no frontend
      - name: Lint
        run: npm run lint

  # Job de Testes para o Frontend
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend  # Define o diretório de trabalho como 'frontend'

    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install
        run: |
          npm ci || npm i

      # Passo 5: Rodar Testes no frontend
      - name: Test
        run: npm test

  # Job de Build para o Frontend
  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend  # Define o diretório de trabalho como 'frontend'

    steps:
      - uses: actions/checkout@v4
        name: Checkout code

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package.json

      - name: Install
        run: |
          npm ci || npm i

      # Passo 6: Build do frontend
      - name: Build
        run: npm run build
